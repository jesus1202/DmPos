package com.dematicket.form;

import com.dematicket.bean.ClienteVO;
import com.dematicket.bean.DepartamentoVO;
import com.dematicket.bean.DistritoVO;
import com.dematicket.bean.DocSunatVO;
import com.dematicket.bean.ProvinciaVO;
import com.dematicket.bean.TClienteVO;
import com.dematicket.data.ClienteData;
import com.dematicket.data.DepartamentoDAO;
import com.dematicket.data.DistritoDAO;
import com.dematicket.data.DocSunatDAO;
import com.dematicket.data.ProvinciaDAO;
import com.dematicket.data.TClienteDAO;
import static com.dematicket.form.FormTicket.txtCliente;
import static com.dematicket.form.FormTicket.txtRUCDNI;
import static com.dematicket.form.FormTicket.txtDireccionP;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;


/**
 *
 * @author lmonge
 */
public class FormUserMaintainer extends javax.swing.JFrame {
    String cabecera = "";
    boolean flag;
    ArrayList<String> detalle = new ArrayList();
    /**
     * Creates new form FormTicket
     */
    public FormUserMaintainer() {
        initComponents();
        loadComponentes();        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtCodCliente = new javax.swing.JTextField();
        btnOKPassChange = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jcbTCliente = new javax.swing.JComboBox<>();
        jcbDocSunat = new javax.swing.JComboBox<>();
        jcbTpersona = new javax.swing.JComboBox<>();
        txtNombres = new javax.swing.JTextField();
        jcbSexo = new javax.swing.JComboBox<>();
        txtDireccion = new javax.swing.JTextField();
        jcbDepa = new javax.swing.JComboBox<>();
        jcbProv = new javax.swing.JComboBox<>();
        jcbDistri = new javax.swing.JComboBox<>();
        txtEmail = new javax.swing.JTextField();
        txtTelefono1 = new javax.swing.JTextField();
        txtTelefono2 = new javax.swing.JTextField();
        txtCelular = new javax.swing.JTextField();
        fecNacimiento = new javax.swing.JFormattedTextField();
        jLabel18 = new javax.swing.JLabel();
        jcbEstado = new javax.swing.JComboBox<>();
        txtNumDocu = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();
        txtNumDocumentoBuscar = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setText("Código Cliente:");

        jLabel2.setText("Tipo Cliente:");

        jLabel3.setText("Documento Sunat:");

        jLabel4.setText("Número Documento:");

        txtCodCliente.setEnabled(false);
        txtCodCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodClienteActionPerformed(evt);
            }
        });

        btnOKPassChange.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnOKPassChange.setText("Registrar");
        btnOKPassChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKPassChangeActionPerformed(evt);
            }
        });

        jLabel5.setText("Tipo Persona:");

        jLabel6.setText("Nombres:");

        jLabel7.setText("Sexo:");

        jLabel8.setText("Fecha Nacimiento:");

        jLabel9.setText("Dirección:");

        jLabel10.setText("Departamento:");

        jLabel11.setText("Provincia:");

        jLabel12.setText("Distrito:");

        jLabel13.setText("E-Mail");

        jLabel14.setText("Teléfono 1:");

        jLabel15.setText("Teléfono 2:");
        jLabel15.setToolTipText("");

        jLabel16.setText("Celular:");

        jcbTpersona.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1 - Natural", "2 - Jurídical" }));

        jcbSexo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "M - Masculino", "F - Femenino" }));

        jcbDepa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbDepaActionPerformed(evt);
            }
        });

        jcbProv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbProvActionPerformed(evt);
            }
        });

        try {
            fecNacimiento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel18.setText("Estado:");

        jcbEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A-Activo", "I-Inactivo" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNumDocu, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jcbDocSunat, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(txtCodCliente, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jcbTCliente, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(158, 158, 158)
                                        .addComponent(jLabel18)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jcbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel16))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtCelular, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtTelefono1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel15)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtTelefono2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtEmail)))
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(4, 4, 4)
                                        .addComponent(jcbDepa, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(29, 29, 29)
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jcbProv, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel12)
                                        .addGap(29, 29, 29)
                                        .addComponent(jcbDistri, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(29, 29, 29)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 513, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jcbSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(fecNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(1, 1, 1)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jcbTpersona, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, 526, javax.swing.GroupLayout.PREFERRED_SIZE)))))))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(287, 287, 287)
                        .addComponent(btnOKPassChange)))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtCodCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(jcbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jcbTCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jcbDocSunat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(txtNumDocu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jcbTpersona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jcbSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(fecNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10)
                        .addComponent(jcbDepa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11)
                        .addComponent(jcbProv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel12)
                    .addComponent(jcbDistri, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txtTelefono1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(txtTelefono2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(txtCelular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnOKPassChange)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel17.setText("Número Documento: ");

        btnBuscar.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnNuevo.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        txtNumDocumentoBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumDocumentoBuscarKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtNumDocumentoBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnBuscar)
                .addGap(82, 82, 82)
                .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(btnNuevo)
                    .addComponent(btnBuscar)
                    .addComponent(txtNumDocumentoBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCodClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodClienteActionPerformed

    private void btnOKPassChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKPassChangeActionPerformed
        // TODO add your handling code here:
        
        ClienteData.ingresarCliente(flag,txtNumDocumentoBuscar.getText(),txtNumDocu.getText(),
                TClienteDAO.getByIndex(jcbTCliente.getSelectedIndex()).getCodigo(),
                DocSunatDAO.getByIndex(jcbDocSunat.getSelectedIndex()).getCodigo(),
                txtNumDocu.getText(),
                jcbTpersona.getSelectedItem().toString().substring(0,1),
                txtNombres.getText(),
                jcbSexo.getSelectedItem().toString().substring(0,1),
                fecNacimiento.getText(),
                txtDireccion.getText(),
                DistritoDAO.getByIndex(jcbDistri.getSelectedIndex()).getCodDistrito(),
                txtEmail.getText(),
                txtTelefono1.getText(),
                txtTelefono2.getText(),
                txtCelular.getText(),
                jcbEstado.getSelectedItem().toString().substring(0,1)
                );
        
        
    }//GEN-LAST:event_btnOKPassChangeActionPerformed

    private void jcbDepaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbDepaActionPerformed
        // TODO add your handling code here:
        int index = jcbDepa.getSelectedIndex();
        String codigo = DepartamentoDAO.getByIndex(index).getCodDepartamento();
        cargarComboProvincia(codigo);
    }//GEN-LAST:event_jcbDepaActionPerformed

    private void jcbProvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbProvActionPerformed
        // TODO add your handling code here:
        if(jcbProv.getSelectedItem()!= null){
            cargarComboDistrito(ProvinciaDAO.getByIndex(jcbProv.getSelectedIndex()).getCodProvincia());
        }
        
    }//GEN-LAST:event_jcbProvActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        ClienteVO clienteVO;
        TClienteVO tclienteVO;
        DocSunatVO docSunatVO;
        DepartamentoVO departamentoVO;
        ProvinciaVO provinciaVO;
        DistritoVO distritoVO;
        clienteVO = ClienteData.getClientexNumDoc(txtNumDocumentoBuscar.getText());
        if(clienteVO!=null){
           flag = true;
           this.setLocationRelativeTo(null);
           this.setSize(710, 650);
           txtCodCliente.setText(clienteVO.getCODIGOCLIENTE());
           
           tclienteVO = TClienteDAO.consultarTClientesXCod(clienteVO.getTcliente());           
           jcbTCliente.setSelectedItem(tclienteVO.getCodigo()+"-"+tclienteVO.getDescripcion());
           
           docSunatVO = DocSunatDAO.consultarDocSunatXCod(clienteVO.getDocsunat());          
           jcbDocSunat.setSelectedItem(docSunatVO.getCodigo()+"-"+docSunatVO.getDescripcion());
           
           txtNumDocu.setText(clienteVO.getCLIERUC());
           txtRUCDNI.setText(clienteVO.getCLIERUC());//lo coloca tambien en el formulario principal
           
           if(clienteVO.getTpersona()=="01"){
               jcbTpersona.setSelectedIndex(0);
           }
           if(clienteVO.getTpersona()=="02"){
               jcbTpersona.setSelectedIndex(1);
           }
           
           txtNombres.setText(clienteVO.getCLIENOM());
           txtCliente.setText(clienteVO.getCLIENOM());//lo coloca tambien en el formulario principal
           
           if(clienteVO.getTpersona()=="M"){
               jcbSexo.setSelectedIndex(0);
           }
           if(clienteVO.getTpersona()=="F"){
               jcbSexo.setSelectedIndex(1);
           }
           SimpleDateFormat parseador = new SimpleDateFormat("yyyy-mm-dd");
           SimpleDateFormat formateador = new SimpleDateFormat("dd/mm/yyyy");
           Date date;
            try {
                date = parseador.parse(clienteVO.getFecnac());
                fecNacimiento.setText(formateador.format(date));
            } catch (ParseException ex) {
                Logger.getLogger(FormUserMaintainer.class.getName()).log(Level.SEVERE, null, ex);
            }
           //System.out.println(formateador.format(date));
           
           txtDireccion.setText(clienteVO.getCLIEDIR());
           txtDireccionP.setText(clienteVO.getCLIEDIR());
           
           txtEmail.setText(clienteVO.getMail());
           txtTelefono1.setText(clienteVO.getTelefono1());
           txtTelefono2.setText(clienteVO.getTelefono2());
           txtCelular.setText(clienteVO.getCelular());
           
           distritoVO=DistritoDAO.consultarUbigeo(clienteVO.getUbigeo());
           
           departamentoVO = DepartamentoDAO.consultarUbigro(distritoVO.getCodDepartamento()); 
           provinciaVO = ProvinciaDAO.consultarUbigeo(distritoVO.getCodProvincia()); 
           jcbDepa.setSelectedItem(departamentoVO.getDepartamento());
           jcbProv.setSelectedItem(provinciaVO.getProvincia());
           jcbDistri.setSelectedItem(distritoVO.getDistrito());
           jcbEstado.setEnabled(true);
           if(clienteVO.getEstado()=="A"){
               jcbEstado.setSelectedIndex(0);
           }
           if(clienteVO.getEstado()=="I"){
               jcbEstado.setSelectedIndex(1);
           }          
           
        }else{
            txtRUCDNI.setText("");//lo coloca tambien en el formulario principal
            txtCliente.setText("OTROS");
            txtDireccionP.setText("");
            this.setSize(710, 135);
            JOptionPane.showMessageDialog(null, "CLIENTE NO REGISTRADO", "DmPos", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        // TODO add your handling code here:
        flag = false;
        txtNumDocumentoBuscar.setText("");
        this.setLocationRelativeTo(null);
        this.setSize(710, 650);
        jcbDepa.setSelectedIndex(0);
        jcbProv.setSelectedIndex(0);
        jcbDistri.setSelectedIndex(0);
        txtCodCliente.setText("");
        jcbTCliente.setSelectedIndex(0);
        jcbDocSunat.setSelectedIndex(0);
        txtNumDocu.setText("");
        jcbTpersona.setSelectedIndex(0);
        txtNombres.setText("");
        jcbSexo.setSelectedIndex(0);
        fecNacimiento.setText("");
        txtDireccion.setText("");
        txtEmail.setText("");
        txtTelefono1.setText("");
        txtTelefono2.setText("");
        txtCelular.setText("");
        jcbEstado.setSelectedIndex(0);
        jcbEstado.setEnabled(false);
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void txtNumDocumentoBuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumDocumentoBuscarKeyTyped
        // TODO add your handling code here:
        //if(Character.isDigit(evt.getKeyChar()) && !Character.isISOControl(evt.getKeyChar())){
//        if(Character.isISOControl(evt.getKeyChar())){
//            Toolkit.getDefaultToolkit().beep();
//            evt.consume();
//        }
//        int k = (int) evt.getKeyChar();
//        //txtRUCDNI.getText().length() trae el numero de caracteres sin contar el actual, por eso colocamos 7 como nuestro liminite
//        if (txtNumDocumentoBuscar.getText().length() > 14 && (k!=KeyEvent.VK_ENTER || k!=KeyEvent.VK_ESCAPE)) {            
//                evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
//                String ingreso = txtNumDocumentoBuscar.getText();
//                txtNumDocumentoBuscar.setText(ingreso.substring(0, txtNumDocumentoBuscar.getText().length()-1));
//                JOptionPane.showMessageDialog(null, "EL MAXIMO DE CARACTERES PERMITOS ES 15", "DmPos",JOptionPane.ERROR_MESSAGE);                      
//        }
        char kc = (char) evt.getKeyChar();
        if(validaCaracter(kc)== false){
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
        }
        int k = (int) evt.getKeyChar();
        //txtRUCDNI.getText().length() trae el numero de caracteres sin contar el actual, por eso colocamos 7 como nuestro liminite
        if (txtNumDocumentoBuscar.getText().length() > 14 && k!=KeyEvent.VK_ENTER) {            
                
                if(k!=KeyEvent.VK_ESCAPE){
                    evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
                    JOptionPane.showMessageDialog(null, "EL MAXIMO DE CARACTERES PERMITOS ES 15", "DmPos",JOptionPane.ERROR_MESSAGE);                                                     
                }
                
        }
    }//GEN-LAST:event_txtNumDocumentoBuscarKeyTyped

    public static boolean validaCaracter(Character c) {
    int x=0;
    char Alfab[]={'a','b','c','d','e','f','g','h','i','j','k','l','m','n','ñ','o','p','q','r','s','t','u','v','w','x','y','z',
    'A','B','C','D','E','F','G','H','I','J','K','L','M','N','Ñ','O','P','Q','R','S','T','U','V','W','X','Y','Z',
    '1','2','3','4','5','6','7','8','9','0'};
    int longitud = Alfab.length;
    for (int i = 0; i<longitud; i++) {
        if(c!=(Alfab[i])){ /*aqui evaluo si elcaratér tipeado es distinto a los caracteres válidos*/
        x++;
        }
    }
    if(x < longitud){
        return true;
    }
    
    return false;
    }
    
    private void cargarComboProvincia(String codigoDepartamento){
        jcbProv.removeAllItems();
        for(ProvinciaVO temp: ProvinciaDAO.consultarProvxDepa(codigoDepartamento)){
            jcbProv.addItem(temp.getProvincia());
        }
    }
    private void cargarComboDistrito(String codigoProvincia){
        jcbDistri.removeAllItems();
        String codigoDepartamento = DepartamentoDAO.getByIndex(jcbDepa.getSelectedIndex()).getCodDepartamento();
        for(DistritoVO temp: DistritoDAO.consultarDistrixProv(codigoDepartamento,codigoProvincia)){
            jcbDistri.addItem(temp.getDistrito());
        }
    } 
    private void loadComponentes(){
        //String path = new File ("").getAbsolutePath();
        //path = path+"\\img\\";
        this.setTitle("DmPos - Crear / Actualizar Cliente");
        //this.setSize(412, 650);
        this.setSize(710, 135);
        loadComboDepartamento();
        loadComboTipoCliente();
        loadComboDocSunat();
        txtNumDocumentoBuscar.setText("");
        //this.setIconImage(new ImageIcon(path+"logowindow.png").getImage());         
        
    }
    private void loadComboDepartamento(){
        for(DepartamentoVO temp: DepartamentoDAO.consultarDepartamentos()){
            jcbDepa.addItem(temp.getDepartamento());
        }
        //empresaRegister.add(cabecera, this)
    }
    
    private void loadComboTipoCliente(){
        for(TClienteVO temp: TClienteDAO.consultarTClientes()){
            if(temp.getCodigo()==""){
                jcbTCliente.addItem(temp.getDescripcion());
            }else{
                jcbTCliente.addItem(temp.getCodigo()+"-"+temp.getDescripcion());
            }            
        }
    }
    
    private void loadComboDocSunat(){
        for(DocSunatVO temp: DocSunatDAO.consultarDocSunat()){
            if(temp.getCodigo()==""){
                jcbDocSunat.addItem(temp.getDescripcion());
            }else{
                jcbDocSunat.addItem(temp.getCodigo()+"-"+temp.getDescripcion());
            }            
        }
    }
    
//    private void imprimir(boolean copia){
//        try{
//            int limit = Util.getLimitLine();
//            String[] dataCabecera = cabecera.split("\\"+Util.FILE_DELIMITADOR);
//            DirectPrinterT88V printer = new DirectPrinterT88V();
//            printer.initialize();
//            printer.setCondensedHib(1);
//            printer.setCenterAlignCommand();
//            printer.setBoldOn();
//            printer.println(" DERRAMA MAGISTERIAL");
//            printer.setBoldOff();
//            printer.println("Av.Gregorio Escobedo 598 Jesus Maria");
//            printer.println(SesionData.getSesion().getCompania());
//            printer.println(SesionData.getSesion().getDireccionCompania());
//            printer.println("RUC: 20136424867");
//            printer.printLine();
//            printer.setBoldOn();
//            if(dataCabecera[17].compareTo("ANULADO")==0){
//                printer.println(" ANULADO ");
//                printer.printLine();
//            }
//            printer.println(" SERIE No: " + Util.completarIzquierda(3, SesionData.getSesion().getSerial(), "0" ) );
//            printer.println(" TICKET No: " + Util.completarIzquierda(8,dataCabecera[7]+"", "0") +" - "+Util.completarIzquierda(8,dataCabecera[8]+"", "0"));
//            printer.println("FECHA: " + dataCabecera[9]);
//            printer.setBoldOff();
//            printer.printLine();
//            printer.setLeftAlignCommand();
//            printer.println(Util.completarDerecha(limit,"CLIENTE: " + dataCabecera[30]));
//            if(dataCabecera.length>32){
//                printer.println(Util.completarDerecha(limit,"RUC/DNI: " + dataCabecera[32] ));
//            }else{
//                printer.println(Util.completarDerecha(limit,"RUC/DNI: " + "" ));
//            }
//            if(dataCabecera.length>33){
//                printer.println(Util.completarDerecha(limit,"DIRECCION: " + dataCabecera[33] ));
//            }else{
//                printer.println(Util.completarDerecha(limit,"DIRECCION: " + "" ));
//            }
//            printer.setCenterAlignCommand();
//            printer.printLine();
//            if(SesionData.getSesion().getModelo().trim().compareTo("TM-T88V")==0){
//                printer.println("CODIGO           CONCEPTO          P.UNIT.  CANT  TOTAL");
//            }
//            if(SesionData.getSesion().getModelo().trim().compareTo("TM-U220")==0){
//                printer.println("CODIGO    CONCEPTO   P.UNIT. CANT  TOTAL");
//            }
//            printer.printLine();
//            printer.setLeftAlignCommand();
//            for(String temp :detalle){
//                String[] dataDetalle = temp.split("\\"+Util.FILE_DELIMITADOR);
//                if(SesionData.getSesion().getModelo().trim().compareTo("TM-T88V")==0){
//                    printer.println(
//                            Util.completarIzquierda(8, dataDetalle[5]+"") + 
//                            " "+Util.completarDerecha(24, dataDetalle[6]) + 
//                            Util.completarIzquierda(7, Util.formatDecimal(Double.parseDouble(dataDetalle[9]))) + 
//                            Util.completarIzquierda(6, dataDetalle[8]+"") + 
//                            Util.completarIzquierda(8, Util.formatDecimal(Double.parseDouble(dataDetalle[18])))
//                    );
//                }
//                if(SesionData.getSesion().getModelo().trim().compareTo("TM-U220")==0){
//                    printer.println(
//                            Util.completarIzquierda(8, dataDetalle[5]+"") + 
//                            " "+Util.completarDerecha(13, dataDetalle[6]) + 
//                            Util.completarIzquierda(6, Util.formatDecimal(Double.parseDouble(dataDetalle[9]))) + 
//                            Util.completarIzquierda(5, dataDetalle[8]+"") + 
//                            Util.completarIzquierda(7, Util.formatDecimal(Double.parseDouble(dataDetalle[18])))
//                    );
//                }
//            }
//            printer.printLine();
//            if(SesionData.getSesion().getModelo().trim().compareTo("TM-T88V")==0){
//                printer.setRightAlignCommand();
//            }
//            double subtotal = Double.parseDouble(dataCabecera[26])-Double.parseDouble(dataCabecera[23]);
//            printer.println(
//                    Util.completarIzquierda(limit,
//                    "SUB TOTAL S/. " + Util.completarIzquierda(8, Util.formatDecimal(subtotal))));
//            printer.println(
//                    Util.completarIzquierda(limit,
//                    "IGV S/. " + Util.completarIzquierda(8, Util.formatDecimal(Double.parseDouble(dataCabecera[23])))));
//            printer.println(Util.completarIzquierda(limit,"---------------------"));
//            printer.println(
//                    Util.completarIzquierda(limit,
//                    "TOTAL S/. " + Util.completarIzquierda(8, Util.formatDecimal(Double.parseDouble(dataCabecera[26])))));
//            printer.printLine();
//            if(SesionData.getSesion().getModelo().trim().compareTo("TM-T88V")==0){
//                printer.setCenterAlignCommand();
//            }
//            printer.println("Cajero: "+dataCabecera[10]);
//            printer.println(Util.obtieneFechaDiaHora());
//            printer.printLine();
//            if(copia){
//                printer.println("*** Copia ***");
//            }
//            printer.println("    \n");
//            printer.println("    \n");
//            printer.println("    \n");
//            printer.println("    \n");
//            printer.println("    \n");
//            if(SesionData.getSesion().getModelo().trim().compareTo("TM-T88V")==0){
//                printer.setCute();
//            }
//            printer.printHibrida(SesionData.getSesion().getImpresora()); 
//        }catch(Exception ex){
//            ex.printStackTrace();
//        }
//    }
      
//    private String buscaCabecera(){
//        File fileCab = null;
//        String impresion = "";
//        try{
//            fileCab = Util.validaArchivoTicket(TipoArchivo.DM.getTipo());
//            ArrayList<String> texto = new ArrayList();
//            if(fileCab==null){
//                JOptionPane.showMessageDialog(null, "NO SE ENCUENTRA CON INFORMACIÓN DEL TICKET");
//                return impresion;
//            }
//            BufferedReader br = new BufferedReader(new FileReader(fileCab));
//            String line = br.readLine();
//            while (line != null) {
//                if(line!=null && line.trim().compareTo("")!=0){
//                    String[] data = line.split("\\"+Util.FILE_DELIMITADOR);
//                    //jcastillo inicio
////                    if(Integer.parseInt(data[7].trim()) == Integer.parseInt(txtSerie.getText().trim()) &&
////                            Integer.parseInt(data[8].trim()) == Integer.parseInt(txtNumero.getText().trim()) ){
//                    if(data[7].trim().equals(txtSerie.getText().trim()) &&
//                            Integer.parseInt(data[8].trim()) == Integer.parseInt(txtNumero.getText().trim()) ){
//                    //jcastillo fin
//                        impresion = line;
//                        break;
//                    }
//                    texto.add(line);
//                }
//                line = br.readLine();
//            }
//            br.close();
//        }catch(Exception ex){
//            ex.printStackTrace();
//        }
//        return impresion;
//    }
//    private VentasCabeceraVO buscaCabeceraBD(){
//        DbConnection conex= new DbConnection();
//        VentasCabeceraVO ventasCabeceraVO = null;
//        try{
//            PreparedStatement consulta = conex.getConnection().prepareStatement("SELECT IDCOMPANIA,IDLOCALIDAD,TINID,ALMACEN,LISTAPRECIOS,CODIGOCLIENTE,CLASEAUX,CLIERUC,SERIE,NUMERO, " +
//                "FECHAPROCESO,VEID,FORMAPAGO,TIPOMONEDA,TIPOVENTA,FACMTOMO,FACMTOMN,FACMTOME,FACESTADO,FACDCTOMO, " +
//                "FACDCTOMN,FACDCTOME,FACUSER,FACFREG,FACHREG,FACANOMES,FACTCAM,FACFLAGD,FACIGVMO,FACIGVMN,FACIGVME, " +
//                "FACISCMO,FACISCMN,FACISCME,FACTOTMO,FACTOTMN,FACTOTME,FACTIP,TIPODOCUMENTO,TIPPERID,FACDSCTO1, " +
//                "FACIMPREP,FACFEVCMTO,FACTCLI,FACTDES,CLIEDIR,TIPOADQ,FACIGV2MN,FACIGV2ME,FACIGV2MO,INICIAL, " +
//                "FACSERMO,FACSERMN,FACSERME,PORIGV,PORSER " +
//                "FROM DMTICKET.DMT_VENTAS_CAB WHERE SERIE=? AND NUMERO=? AND FACESTADO=?");
//            consulta.setString(1, txtSerie.getText().trim());
//            consulta.setInt(2, Integer.parseInt(txtNumero.getText().trim()));
//            consulta.setString(3, "ACEPTADO");
//            ResultSet res = consulta.executeQuery();
//            if(res.next()){
//                ventasCabeceraVO = new VentasCabeceraVO();
//                ventasCabeceraVO.setIDCOMPANIA(res.getString("IDCOMPANIA"));
//                ventasCabeceraVO.setIDLOCALIDAD(res.getString("IDLOCALIDAD"));
//                ventasCabeceraVO.setTINID(res.getString("TINID"));
//                ventasCabeceraVO.setALMACEN(res.getString("ALMACEN"));
//                ventasCabeceraVO.setLISTAPRECIOS(res.getString("LISTAPRECIOS"));
//                ventasCabeceraVO.setCODIGOCLIENTE(res.getString("CODIGOCLIENTE"));
//                ventasCabeceraVO.setCLASEAUX(res.getString("CLASEAUX"));
//                ventasCabeceraVO.setCLIERUC(res.getString("CLIERUC"));
//                ventasCabeceraVO.setSERIE(res.getString("SERIE"));
//                ventasCabeceraVO.setNUMERO(res.getString("NUMERO"));
//                ventasCabeceraVO.setFECHAPROCESO(res.getString("FECHAPROCESO"));
//                ventasCabeceraVO.setVEID(res.getString("VEID"));
//                ventasCabeceraVO.setFORMAPAGO(res.getString("FORMAPAGO"));
//                ventasCabeceraVO.setTIPOMONEDA(res.getString("TIPOMONEDA"));
//                ventasCabeceraVO.setTIPOVENTA(res.getString("TIPOVENTA"));
//                ventasCabeceraVO.setFACMTOMO(res.getBigDecimal("FACMTOMO"));
//                ventasCabeceraVO.setFACMTOMN(res.getBigDecimal("FACMTOMN"));
//                ventasCabeceraVO.setFACMTOME(res.getBigDecimal("FACMTOME"));
//                ventasCabeceraVO.setFACESTADO(res.getString("FACESTADO"));
//                ventasCabeceraVO.setFACDCTOMO(res.getBigDecimal("FACDCTOMO"));
//                ventasCabeceraVO.setFACDCTOMN(res.getBigDecimal("FACDCTOMN"));
//                ventasCabeceraVO.setFACDCTOME(res.getBigDecimal("FACDCTOME"));
//                ventasCabeceraVO.setFACUSER(res.getString("FACUSER"));
//                ventasCabeceraVO.setFACFREG(res.getString("FACFREG"));
//                ventasCabeceraVO.setFACHREG(res.getString("FACHREG"));
//                ventasCabeceraVO.setFACANOMES(res.getString("FACANOMES"));
//                ventasCabeceraVO.setFACTCAM(res.getBigDecimal("FACTCAM"));
//                ventasCabeceraVO.setFACFLAGD(res.getString("FACFLAGD"));
//                ventasCabeceraVO.setFACIGVMO(res.getBigDecimal("FACIGVMO"));
//                ventasCabeceraVO.setFACIGVMN(res.getBigDecimal("FACIGVMN"));
//                ventasCabeceraVO.setFACIGVME(res.getBigDecimal("FACIGVME"));
//                ventasCabeceraVO.setFACISCMO(res.getBigDecimal("FACISCMO"));
//                ventasCabeceraVO.setFACISCMN(res.getBigDecimal("FACISCMN"));
//                ventasCabeceraVO.setFACISCME(res.getBigDecimal("FACISCME"));
//                ventasCabeceraVO.setFACTOTMO(res.getBigDecimal("FACTOTMO"));
//                ventasCabeceraVO.setFACTOTMN(res.getBigDecimal("FACTOTMN"));
//                ventasCabeceraVO.setFACTOTME(res.getBigDecimal("FACTOTME"));
//                ventasCabeceraVO.setFACTIP(res.getString("FACTIP"));
//                ventasCabeceraVO.setTIPODOCUMENTO(res.getString("TIPODOCUMENTO"));
//                ventasCabeceraVO.setTIPPERID(res.getString("TIPPERID"));
//                ventasCabeceraVO.setFACDSCTO1(res.getBigDecimal("FACDSCTO1"));
//                ventasCabeceraVO.setFACIMPREP(res.getString("FACIMPREP"));
//                ventasCabeceraVO.setFACFEVCMTO(res.getString("FACFEVCMTO"));
//                ventasCabeceraVO.setFACTCLI(res.getString("FACTCLI"));
//                ventasCabeceraVO.setFACTDES(res.getString("FACTDES"));
//                ventasCabeceraVO.setCLIEDIR(res.getString("CLIEDIR"));
//                ventasCabeceraVO.setTIPOADQ(res.getString("TIPOADQ"));
//                ventasCabeceraVO.setFACIGV2MN(res.getBigDecimal("FACIGV2MN"));
//                ventasCabeceraVO.setFACIGV2ME(res.getBigDecimal("FACIGV2ME"));
//                ventasCabeceraVO.setFACIGV2MO(res.getBigDecimal("FACIGV2MO"));
//                ventasCabeceraVO.setINICIAL(res.getBigDecimal("INICIAL"));
//                ventasCabeceraVO.setFACSERMO(res.getBigDecimal("FACSERMO"));
//                ventasCabeceraVO.setFACSERMN(res.getBigDecimal("FACSERMN"));
//                ventasCabeceraVO.setFACSERME(res.getBigDecimal("FACSERME"));
//                ventasCabeceraVO.setPORIGV(res.getBigDecimal("PORIGV"));
//                ventasCabeceraVO.setPORSER(res.getBigDecimal("PORSER"));
//            }
//            res.close();
//            consulta.close();
//            conex.desconectar();
//        }catch(Exception ex){
//            conex.desconectar();
//            ex.printStackTrace();
//        }
//        return ventasCabeceraVO;
//    }
    
//    private ArrayList<String> buscaDetalle(){
//        File fileCab = null;
//        ArrayList<String> impresion = new ArrayList();
//        int numero = 0;
//        int numeroEval = 0;
//        try{
//            fileCab = Util.validaArchivoTicket(TipoArchivo.DMD.getTipo());
//            if(fileCab==null){
//                JOptionPane.showMessageDialog(null, "NO SE ENCUENTRA CON INFORMACIÓN DEL TICKET");
//                return impresion;
//            }
//            BufferedReader br = new BufferedReader(new FileReader(fileCab));
//            String line = br.readLine();
//            while (line != null) {
//                if(line!=null && line.trim().compareTo("")!=0){
//                    String[] data = line.split("\\"+Util.FILE_DELIMITADOR);
//                    numeroEval = Integer.parseInt(data[3].trim());
//                    //jcastillo inicio
////                    if(Integer.parseInt(data[2].trim()) == Integer.parseInt(txtSerie.getText().trim()) &&
////                            Integer.parseInt(data[3].trim()) == Integer.parseInt(txtNumero.getText().trim()) ){
//                    if(data[2].trim().equals(txtSerie.getText().trim()) &&
//                            Integer.parseInt(data[3].trim()) == Integer.parseInt(txtNumero.getText().trim()) ){
//                    //jcastillo fin
//                        impresion.add(line);
//                        numero = Integer.parseInt(data[3].trim());
//                    }
//                    if(numero>0 && numero!=numeroEval){
//                        break;
//                    }
//                }
//                line = br.readLine();
//            }
//            br.close();
//        }catch(Exception ex){
//            ex.printStackTrace();
//        }
//        return impresion;
//    }
//    private ArrayList<VentasDetalleVO> buscaDetalleBD(){
//        ArrayList<VentasDetalleVO> ventasDetalleVOList = new ArrayList();
//        DbConnection conex= new DbConnection();
//        VentasDetalleVO ventasDetalleVO = null;
//        try{
//            String valor =jcbTipoDocumento.getSelectedItem().toString();            
//            String valorSeleccionado[] = valor.split(" - ");
//            String tipo= valorSeleccionado[0];
//        
//            PreparedStatement consulta = conex.getConnection().prepareStatement("SELECT IDCOMPANIA,TIPODOCUMENTO,SERIE,NUMERO,NUMREG,CODCON,DESCON,UNIDADMEDIDA,CANTIDAD,DFACPREUMO, " +
//                "DFACPREUMN,DFACPREUME,DFACMTOMO,DFACMTOMN,DFACMTOME,FECHVTA,DFACIMP1,DFACIMPMTO1,DFACVTOTMO,DFACVTOTMN, " +
//                "DFACVTOTME,DFACTFLAG " +
//                "FROM DMTICKET.DMT_VENTAS_DET WHERE SERIE=? AND NUMERO=? AND TIPODOCUMENTO=?");
//            consulta.setString(1, txtSerie.getText().trim());
//            consulta.setInt(2, Integer.parseInt(txtNumero.getText().trim()));
//            consulta.setString(3, tipo);
//            ResultSet res = consulta.executeQuery();
//            while(res.next()){
//                ventasDetalleVO = new VentasDetalleVO();
//                ventasDetalleVO.setIDCOMPANIA(res.getString("IDCOMPANIA"));
//                ventasDetalleVO.setTIPODOCUMENTO(res.getString("TIPODOCUMENTO"));
//                ventasDetalleVO.setSERIE(res.getString("SERIE"));
//                ventasDetalleVO.setNUMERO(res.getString("NUMERO"));
//                ventasDetalleVO.setNUMREG(res.getBigDecimal("NUMREG"));
//                ventasDetalleVO.setCODCON(res.getString("CODCON"));
//                ventasDetalleVO.setDESCON(res.getString("DESCON"));
//                ventasDetalleVO.setUNIDADMEDIDA(res.getString("UNIDADMEDIDA"));
//                ventasDetalleVO.setCANTIDAD(res.getBigDecimal("CANTIDAD"));
//                ventasDetalleVO.setDFACPREUMO(res.getBigDecimal("DFACPREUMO"));
//                ventasDetalleVO.setDFACPREUMN(res.getBigDecimal("DFACPREUMN"));
//                ventasDetalleVO.setDFACPREUME(res.getBigDecimal("DFACPREUME"));
//                ventasDetalleVO.setDFACMTOMO(res.getBigDecimal("DFACMTOMO"));
//                ventasDetalleVO.setDFACMTOMN(res.getBigDecimal("DFACMTOMN"));
//                ventasDetalleVO.setDFACMTOME(res.getBigDecimal("DFACMTOME"));
//                ventasDetalleVO.setFECHVTA(res.getString("FECHVTA"));
//                ventasDetalleVO.setDFACIMP1(res.getBigDecimal("DFACIMP1"));
//                ventasDetalleVO.setDFACIMPMTO1(res.getBigDecimal("DFACIMPMTO1"));
//                ventasDetalleVO.setDFACVTOTMO(res.getBigDecimal("DFACVTOTMO"));
//                ventasDetalleVO.setDFACVTOTMN(res.getBigDecimal("DFACVTOTMN"));
//                ventasDetalleVO.setDFACVTOTME(res.getBigDecimal("DFACVTOTME"));
//                ventasDetalleVO.setDFACTFLAG(res.getString("DFACTFLAG"));
//                ventasDetalleVOList.add(ventasDetalleVO);
//            }
//            res.close();
//            consulta.close();
//            conex.desconectar();
//        }catch(Exception ex){
//            conex.desconectar();
//            ex.printStackTrace();
//        }
//        return ventasDetalleVOList;       
//    }
    
//    private void imprimirAnulacion(boolean copia, String[] data){
//        try{
//            int limit = Util.getLimitLine();
//            DirectPrinterT88V printer = new DirectPrinterT88V();
//            printer.initialize();
//            printer.setCondensedHib(1);
//            printer.setCenterAlignCommand();
//            printer.setBoldOn();
//            printer.println(" DERRAMA MAGISTERIAL");
//            printer.setBoldOff();
//            printer.println("Av.Gregorio Escobedo 598 Jesus Maria");
//            printer.println(SesionData.getSesion().getCompania());
//            printer.println(SesionData.getSesion().getDireccionCompania());
//            printer.println("RUC: 20136424867");
//            printer.printLine();
//            printer.setBoldOn();
//            printer.println(" ANULACION ");
//            printer.printLine();
//            printer.println(" SERIE No: " + Util.completarIzquierda(3, SesionData.getSesion().getSerial(), "0" ));
//            printer.println(" TICKET No: " + data[7]+" - "+Util.completarIzquierda(8,data[8]+"", "0"));
//            printer.println("FECHA: " + data[9]);
//            printer.setBoldOff();
//            printer.printLine();
//            printer.setLeftAlignCommand();
//            printer.println(Util.completarDerecha(limit,"CLIENTE: " + data[30]));
//            if(data.length>32){
//                printer.println(Util.completarDerecha(limit,"RUC/DNI: " + data[32] ));
//            }else{
//                printer.println(Util.completarDerecha(limit,"RUC/DNI: " + "" ));
//            }
//            if(data.length>33){
//                printer.println(Util.completarDerecha(limit,"DIRECCION: " + data[33] ));
//            }else{
//                printer.println(Util.completarDerecha(limit,"DIRECCION: " + "" ));
//            }
//            printer.setCenterAlignCommand();
//            printer.printLine();
//            double subtotal = Double.parseDouble(data[26])-Double.parseDouble(data[23]);
//            printer.println(
//                    Util.completarIzquierda(limit,
//                    "SUB TOTAL S/." + Util.completarIzquierda(8, Util.formatDecimal(subtotal))));
//            printer.println(
//                    Util.completarIzquierda(limit,
//                    "IGV S/." + Util.completarIzquierda(8, Util.formatDecimal(Double.parseDouble(data[23])))));
//            printer.println(Util.completarIzquierda(limit,"---------------------"));
//            printer.println(
//                    Util.completarIzquierda(limit,
//                    "TOTAL S/." + Util.completarIzquierda(8, Util.formatDecimal(Double.parseDouble(data[26])))));
//            printer.printLine();
//            if(SesionData.getSesion().getModelo().trim().compareTo("TM-T88V")==0){
//                printer.setCenterAlignCommand();
//            }
//            printer.println("Cajero: "+data[10]);
//            printer.println(Util.obtieneFechaDiaHora());
//            printer.printLine();
//            if(copia){
//                printer.println("*** Copia ***");
//            }
//            printer.println("    \n");
//            printer.println("    \n");
//            printer.println("    \n");
//            printer.println("    \n");
//            printer.println("    \n");
//            if(SesionData.getSesion().getModelo().trim().compareTo("TM-T88V")==0){
//                printer.setCute();
//            }
//            printer.printHibrida(SesionData.getSesion().getImpresora()); 
//        }catch(Exception ex){
//            ex.printStackTrace();
//        }
//    }
    
    public void Limpiar(){
       
    }
        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnOKPassChange;
    private javax.swing.JFormattedTextField fecNacimiento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JComboBox<String> jcbDepa;
    private javax.swing.JComboBox<String> jcbDistri;
    private javax.swing.JComboBox<String> jcbDocSunat;
    private javax.swing.JComboBox<String> jcbEstado;
    private javax.swing.JComboBox<String> jcbProv;
    private javax.swing.JComboBox<String> jcbSexo;
    private javax.swing.JComboBox<String> jcbTCliente;
    private javax.swing.JComboBox<String> jcbTpersona;
    private javax.swing.JTextField txtCelular;
    private javax.swing.JTextField txtCodCliente;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtNombres;
    private javax.swing.JTextField txtNumDocu;
    private javax.swing.JTextField txtNumDocumentoBuscar;
    private javax.swing.JTextField txtTelefono1;
    private javax.swing.JTextField txtTelefono2;
    // End of variables declaration//GEN-END:variables
}
